import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

const API_URL = import.meta.env.VITE_API_URL;

export const userApi = createApi({
  reducerPath: "userApi",
  baseQuery: fetchBaseQuery({
    baseUrl: `${API_URL}/api/v1/auth`,
    credentials: "include",
  }),
  endpoints: builder => ({
    verifyToken: builder.query({
      query: () => "/verify-token",
    }),
    login: builder.mutation({
      query: credentials => ({
        url: "/login",
        method: "POST",
        body: credentials,
      }),
    }),
    signup: builder.mutation({
      query: credentials => ({
        url: "/signup",
        method: "POST",
        body: credentials,
      }),
    }),
    verifyEmail: builder.mutation({
      query: credentials => ({
        url: `/verify-email`,
        method: "POST",
        body: credentials,
      }),
    }),
    currentUser: builder.query({
      query: () => "/current-user",
    }),
    updateUser: builder.mutation({
      query: user => ({
        url: "/update-user",
        method: "PATCH",
        body: user,
      }),
    }),
    forgotPassword: builder.mutation({
      query: email => ({
        url: "/forgot-password",
        method: "POST",
        body: { email },
      }),
    }),
    resetPassword: builder.mutation({
      query: ({ password, token }) => ({
        url: `/reset-password/${token}`,
        method: "POST",
        body: { password },
      }),
    }),
    logout: builder.mutation({
      query: () => ({
        url: "/logout",
        method: "POST",
      }),
    }),
  }),
});

// Export hooks generated by RTK Query to use the endpoints in components
export const {
  useVerifyTokenQuery,
  useLoginMutation,
  useSignupMutation,
  useVerifyEmailMutation,
  useCurrentUserQuery,
  useUpdateUserMutation,
  useForgotPasswordMutation,
  useResetPasswordMutation,
  useLogoutMutation,
} = userApi;
